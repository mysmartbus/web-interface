<?php
// Last Updated: 2017-07-23
$dbc = new genesis();
$db = $dbc->connectServer();
$dbc->connectDatabase('contacts', 0.25);

define('PERSONAL', 1);
define('BUSINESS', 2);

function addeditform($dowhat) {
    /**
     * This function consolidates the add and edit forms.
     *
     * Added: 2017-07-09
     * Modified: 2017-07-21
     *
     * @param Required string $dowhat Specifies which form to display
     *                          Must be 'addcontact' or 'editcontact'
     *
     * @return Nothing
    **/

    global $dbc, $valid, $KG_SECURITY;

    $table = new HtmlTable();
    $grouptable = new HtmlTable();
    $innertables = new HtmlTable();
    $form = new HtmlForm();

    // Hide all messages generated by $KG_SECURITY->hasPermission()
    $KG_SECURITY->hideMsgs();

    // Display errors if any
    $valid->displayErrors();

    if ($valid->hasErrors()) {
        // Set to 'editcontact' so the user can correct the problem
        $dowhat = 'editcontact';
    }

    if ($dowhat == 'editcontact') {
        if (!$KG_SECURITY->hasPermission('edit')) {
            echo '<center>'.get_lang('nopermissionedit').'<br><br>';
            $form->buttononlyform(kgGetScriptName(),'post','frmcontinue',get_lang('continue'));
            echo '</center>';
            return;            
        }

        // Get ID number
        $contactid = $valid->get_value_numeric('contactid', 0);

    } elseif ($dowhat == 'addcontact') {
        if (!$KG_SECURITY->hasPermission('edit')) {
            echo '<center>'.get_lang('nopermissionadd').'<br><br>';
            $form->buttononlyform(kgGetScriptName(),'post','frmcontinue',get_lang('continue'));
            echo '</center>';
            return;            
        }

        $prevcontactid = $valid->get_value_numeric('contactid', 0);

        // Set to zero so that function getdata() can return a new ID number
        $valid->setValue(array('contactid' => 0));
        $contactid = 0;

    } else {
        // $dowhat did not equal 'addcontact' or 'editcontact'
        echo '<center>'.get_lang('unexpectedactionreceivedfunction').__FUNCTION__.'()<br><br>';
        $form->buttononlyform(kgGetScriptName(),'post','frmcontinue',get_lang('continue'));
        echo '</center>';
        return;
    }

    // Retrieve data no matter what $dowhat is set to
    $contactdata = getdata($dowhat, $contactid);

    // Javascript code for switching between layouts and for validating form data
    echo '<script type="text/javascript">

function switchContactType(type) {

    if (type == 1) {
        // Personal Contact
        document.getElementById("personalcontact").className = "";
        document.getElementById("businesscontact").className = "hidden";

    } else if (type == 2) {
        // Business Contact
        document.getElementById("personalcontact").className = "hidden";
        document.getElementById("businesscontact").className = "";

    }

    if (document.getElementById("ACTON").value == \'savenewcontact\') {
        // Copy data between the contact types ONLY when adding a new contact

        var fields = ["notes", "industry", "emailaddress", "referredby"];
        if (type == 1) {
            // From Business to Personal

            // Form fields with same name
            for (var fld in fields) {
                var fnb = fields[fld]+"bl";
                var fnp = fields[fld]+"pl";
                document.getElementById(fnp).value = document.getElementById(fnb).value;
            }

            // Form fields with different names
            document.getElementById("businessname").value = document.getElementById("companyname").value;
            document.getElementById("officephone").value = document.getElementById("workphone").value;                

        } else if (type == 2) {
            // From Personal to Business

            // Form fields with same name
            for (var fld in fields) {
                var fnb = fields[fld]+"bl";
                var fnp = fields[fld]+"pl";
                document.getElementById(fnb).value = document.getElementById(fnp).value;
            }

            // Form fields with different names
            document.getElementById("companyname").value = document.getElementById("businessname").value;
            document.getElementById("workphone").value = document.getElementById("officephone").value;
        }
    }
}

function validate() {
    // Some client side validation of the form data

    var layoutid = document.getElementById("contacttypeid").value;

    if (layoutid == 1) {
        // Personal Contact

        if (document.getElementById("lastname").value == \'\' && document.getElementById("firstname").value == \'\') {
            // Contact name required
            alert("'.get_lang('ValidationPersonalNameMissing').'");
            return false;
        }

        var workphone = document.getElementById("workphone").value;
        var homephone = document.getElementById("homephone").value;
        var cellphone = document.getElementById("cellphone").value;
        var emailaddress = document.getElementById("emailaddress").value;


        if (workphone == \'\' && homephone == \'\' && cellphone == \'\' && emailaddress == \'\') {
            // Contact method required
            alert("'.get_lang('ValidationPersonalEmailPhoneMissing').'");
            return false;
        }

        // Validation passed. Submit form data to server
        return true;

    } else if (layoutid == 2) {
        // Business Contact

        if (document.getElementById("businessname").value == \'\') {
            // Business name required
            alert("'.get_lang('ValidationBusinessNameMissing').'");
            return false;
        }

        var officephone = document.getElementById("officephone").value;
        var faxnumber = document.getElementById("faxnumber").value;
        var emailaddress = document.getElementById("emailaddress").value;

        if (officephone == \'\' && faxnumber == \'\' && emailaddress == \'\') {
            // Contact method required

            alert("'.get_lang('ValidationBusinessEmailPhoneMissing').'");
            return false;
        }

        // Validation passed. Submit form data to server
        return true;
    } else {
        // Validation failed
        // Some how the script received an invalid contacttypeid number.
        return false;
    }

    // Just in case
    alert("'.get_lang('JSValidationFailure').'");
    return false;
}
// END javascript function validate()

function showhidespouse(type) {
    if (type == 3) {
        document.getElementById("showhidespousename").className = "";
    } else {
        document.getElementById("showhidespousename").className = "hidden";
    }
}

function confirmItemDelete() {
    var answer = confirm("'.get_lang('ConfirmDelete').'");

    if (answer) {
        return true;
    } else {
        return false;
    }
}
</script>';

    // Setup a form if needed
    if ($dowhat == 'editcontact') {

        $pagetitle = get_lang('EditContact');

        // Start edit contact info form
        $form->add_hidden(array(
            'ACTON' => 'savechangesexisting',
            'contactid' => $contactdata['contactid']
        ));
        $form->onsubmit('return validate();');
        $form->start_form(kgGetScriptName(),'post','frmeditinfo');

    } elseif ($dowhat == 'addcontact') {

        $pagetitle = get_lang('addcontact');

        // Start add contact form
        $form->add_hidden(array(
            'ACTON' => 'savenewcontact',
            'contactid' => $contactdata['contactid']
        ));
        $form->onsubmit('return validate();');
        $form->start_form(kgGetScriptName(),'post','frmaddcontact');

    }

    echo '<div class="page_title_div">'.$pagetitle.'</div>';

    echo '<div class="ae_id_type_encompassing_div">';

    // Contact ID Number
    echo '<div class="fieldpair_div">';
    echo '<span class="fieldname_span">'.get_lang("contactid").':</span>';
    echo '<span class="fieldvalue_span">'.$contactdata['contactid'].'</span>';
    echo '</div>';

    // Contact Type
    $query = $dbc->select('contacttypes');
    while ($row = $dbc->fetchAssoc($query)) {
        $typelist[$row['contacttypeid']] = $row['contacttype'];
    }
    echo '<div class="fieldpair_div">';
    echo '<span class="fieldname_span">'.get_lang("contacttype").':</span>';
    echo '<span class="fieldvalue_span noborder">';
    $form->onsubmit('switchContactType(this.value);');
    $form->add_select_match_key('contacttypeid',$typelist,$contactdata['contacttypeid']);
    echo '</span></div>';

    echo "\n</div><!-- END ae_id_type_encompassing_div -->\n";

    // Contact layout tables
    echo "\n".'<div id="personalcontact" class="hidden">'."\n";
        AePersonalLayout($dowhat, $contactdata);
    echo "\n</div>\n".'<div id="businesscontact" class="hidden">'."\n";
        AeBusinessLayout($dowhat, $contactdata);
    echo "\n</div>\n";

    echo '<div class="ae_buttons_div">';
    if ($dowhat == 'editcontact') {

        // Save Changes Button
        $form->add_button_submit(get_lang('savechanges'));
        $form->end_form();

        // Cancel Changes Button
        echo "\n";
        $form->add_hidden(array('ACTON' => 'viewcontact', 'contactid' => $contactdata['contactid']));
        $form->buttononlyform(kgGetScriptName(),'post','frmcancelchanges',get_lang('cancelchanges'));

        // Delete Contact button
        echo "\n";
        $form->onsubmit('return confirmItemDelete();');
        $form->add_hidden(array('ACTON' => 'deleteconfirmed', 'contactid' => $contactdata['contactid']));
        $form->buttononlyform(kgGetScriptName(),'post','frmdeletecontact',get_lang('DeleteContact'));

    } elseif ($dowhat == 'addcontact') {

        // Save Changes Button
        $form->add_button_submit(get_lang('SaveInfo'));
        $form->end_form();

        // Cancel Changes Button
        $form->add_hidden(array('contactid' => $prevcontactid));
        $form->buttononlyform(kgGetScriptName(),'post','frmcancel',get_lang('cancel'));

    }
    echo "\n</div><!-- END ae_buttons_div -->\n";

    if ($dowhat == 'editcontact') {
        $cid = $contactdata['contacttypeid'];
    } elseif ($dowhat == 'addcontact') {
        $cid = 1;
    }

    // Display the correct contact info
    echo '<script type="text/javascript">switchContactType('.$cid.');</script>';

}
// END function addeditform()
/////

function deleteconfirmed() {
    // Deletes the contact data from the database

    global $valid, $dbc;

    $contactid = $valid->get_value('contactid');

    $form = new HtmlForm();

    // Contact info
    if ($dbc->delete('contacts', 'contactid = '.$contactid)) {
        // success
        echo get_lang('DeleteSuccess').'<br/><br/>';
        $form->buttononlyform(kgGetScriptName(),'post',get_lang('continue'),'');
    } else {
        // failure
        $valid->addError('DeleteFailed');
        if ($dbc->database_errno() != 0) {
            $valid->addError(get_lang('DBErrNum').$dbc->database_errno());
            $valid->addError(get_lang('DBErrStr').$dbc->errorString());
        }
    }

    if ($valid->is_error()) {
        // Redisplay the contact info
        deleteform();
    }
}
// END function deleteconfirmed()

function GetContactName($id) {
    /**
     * Retreive and format the name of a contact when given an ID number
     *
     * Added: 2017-07-09
     * Modified: 2017-07-09
     *
     * @param Required integer $id A contact ID number
     *
     * @return string The formatted name of the contact if $id is valid or blank if not
    **/

    global $dbc;

    // Build the SQL query
    $concat = array('buildConcatWS' => array(', ', array('lastname', 'firstname'), 'FullName'));
    $query = $dbc->select('contacts', 'contactid = '.$id, array('contacttypeid', $concat, 'companyname'));

    // Run the query
    $data = $dbc->fetchAssoc($query);

    if ($dbc->numRows($query) > 0) {
        if ($data['contacttypeid'] == 1) {
            // Personal Contact
            return $data['FullName'];
        } elseif ($data['contacttypeid'] == 2) {
            // Business Contact
            return $data['companyname'];
        }
    }

    // $id is not a valid ID number
    return '';
}
// END function GetContactName()

function getdata($dowhat, $contactid=0) {

    global $dbc, $valid;

    if (($dowhat == 'addcontact') || ($dowhat == 'getchanges')) {
        // Adding a new contact or updated info on an existing contact
        // so get data from $_POST if any

        $data = array();
        $data['contactid'] = $valid->get_value_numeric('contactid', 0);
        $data['contacttypeid'] = $valid->get_value_numeric('contacttypeid', 0);

        if ($data['contacttypeid'] == 2) {
            // Business Contact
            $type = 'bl';
        } else {
            $type = 'pl';
        }

        // Common data among all contact types
        $data['addressline1'] = $valid->get_value($type.'addressline1');
        $data['addressline2'] = $valid->get_value($type.'addressline2');
        $data['city'] = $valid->get_value($type.'city');
        $data['stateorprovince'] = $valid->get_value($type.'stateorprovince');
        $data['postalcode'] = $valid->get_value($type.'postalcode');
        $data['region'] = $valid->get_value($type.'region');
        $data['country'] = $valid->get_value($type.'country');
        $data['faxnumber'] = $valid->get_value($type.'faxnumber');
        $data['website'] = $valid->get_value('website');

        if ($data['contacttypeid'] == BUSINESS) {
            // Business Contact
            $data['workphone'] = $valid->get_value('officephone');
            $data['companyname'] = $valid->get_value('businessname');
            $data['industry'] = $valid->get_value('industrybl');
            $data['emailaddress'] = $valid->get_value('emailaddressbl');
            $data['lastmeetingdate'] = $valid->get_value('yearlastmeetingdatebl');
            $data['referredby'] = $valid->get_value('referredbybl');
            $data['notes'] = $valid->get_value('notesbl');

        } elseif ($data['contacttypeid'] == PERSONAL) {
            // Personal Contact
            $data['lastname'] = $valid->get_value('lastname');
            $data['middleinitial'] = $valid->get_value('middleinitial');
            $data['firstname'] = $valid->get_value('firstname');
            $data['preferedname'] = $valid->get_value('preferedname');
            $data['dear'] = $valid->get_value('dear');
            $data['workphone'] = $valid->get_value('workphone');
            $data['workextension'] = $valid->get_value('workextension');
            $data['homephone'] = $valid->get_value('homephone');
            $data['cellphone'] = $valid->get_value('cellphone');
            $data['companyname'] = $valid->get_value('companyname');
            $data['industry'] = $valid->get_value('industrypl');
            $data['title'] = $valid->get_value('title');
            $data['emailaddress'] = $valid->get_value('emailaddresspl');
            $data['birthdate'] = $valid->get_value('birthdate');
            $data['lastmeetingdate'] = $valid->get_value('yearlastmeetingdatepl');
            $data['referredby'] = $valid->get_value('referredbypl');
            $data['maritalstatusid'] = $valid->get_value_numeric('maritalstatusid',1);
            $data['spousesname'] = $valid->get_value('spousesname');
            $data['childrensnames'] = $valid->get_value('childrensnames');
            $data['hometown'] = $valid->get_value('hometown');
            $data['contactsinterests'] = $valid->get_value('contactsinterests');
            $data['notes'] = $valid->get_value('notespl');

        }

        if ($data['contactid'] < 1) {
            // Anything less than 1 is not a valid ID number
            $data['contactid'] = kgFindIdNumber('contacts','contactid', $dbc);
        }

    } else {
        // $dowhat = 'viewcontact' or $dowhat = 'editcontact'

        if ($contactid > 0) {
            // Get data from database
            $data = $dbc->fetchAssoc($dbc->select('contacts','contactid = '.$contactid));
        } else {
            // Invalid ID number.
            // Return error message.
            $data = get_lang('contactid').' '.$contactid.' '.get_lang('notfound');
        }
    }

    return $data;
}
// END function getdata()

function savechangesexisting() {

    global $dbc, $valid;

    list($valid, $data) = validate_data('getchanges');

    $queryarray = array();

    if ($valid) {
        // No errors found
        // Build Update Query

        if ($data['contacttypeid'] == 1) {
            // Personal Contact

            $queryarray = array(
            	'contacttypeid' => $data['contacttypeid'],
            	'firstname' => $data['firstname'],
            	'lastname' => $data['lastname'],
            	'middleinitial' => $data['middleinitial'],
            	'dear' => $data['dear'],
            	'addressline1' => $data['addressline1'],
            	'addressline2' => $data['addressline2'],
            	'city' => $data['city'],
            	'stateorprovince' => $data['stateorprovince'],
            	'postalcode' => $data['postalcode'],
            	'region' => $data['region'],
            	'country' => $data['country'],
            	'companyname' => $data['companyname'],
            	'industry' => $data['industry'],
            	'title' => $data['title'],
            	'workphone' => $data['workphone'],
            	'workextension' => $data['workextension'],
            	'homephone' => $data['homephone'],
            	'cellphone' => $data['cellphone'],
            	'faxnumber' => $data['faxnumber'],
            	'emailaddress' => $data['emailaddress'],
            	'birthdate' => $data['birthdate'],
                'lastmeetingdate' => $data['lastmeetingdate'],
            	'referredby' => $data['referredby'],
            	'notes' => $data['notes'],
            	'maritalstatusid' => $data['maritalstatusid'],
            	'spousesname' => $data['spousesname'],
            	'childrensnames' => $data['childrensnames'],
            	'hometown' => $data['hometown'],
            	'contactsinterests' => $data['contactsinterests']
            );
        } elseif ($data['contacttypeid'] == 2) {
            // Business Contact

            $queryarray = array(
                'contacttypeid' => $data['contacttypeid'],
                'companyname' => $data['companyname'],
                'industry' => $data['industry'],
                'addressline1' => $data['addressline1'],
                'addressline2' => $data['addressline2'],
                'city' => $data['city'],
                'stateorprovince' => $data['stateorprovince'],
                'postalcode' => $data['postalcode'],
                'region' => $data['region'],
                'country' => $data['country'],
                'workphone' => $data['workphone'],
                'faxnumber' => $data['faxnumber'],
                'website' => $data['website'],
                'emailaddress' => $data['emailaddress'],
                'lastmeetingdate' => $data['lastmeetingdate'],
                'referredby' => $data['referredby'],
                'notes' => $data['notes']
            );
        }

        if (!empty($queryarray)) {
            /// Any error messages will be displayed by the function addeditform()
            if (!$dbc->update('contacts', 'contactid='.$data['contactid'], $queryarray)) {
                // Update failed
                $valid->addError(get_lang("ContactUpdateFailed") . $dbc->errorString());
            }
        } // END if (!empty($queryarray))

    }
    // END if ($valid)

    // Don't display or delete any errors here. This will be taken care of by the function addeditform()

}
//END function savechangesexisting()

function SaveNewContact() {

    global $dbc, $valid;

    list($tf, $data) = validate_data('addcontact');

    if ($tf) {
        // No errors found
        // Build Insert Query

        if ($data['contacttypeid'] == 1) {
            // Personal Contact

            $queryarray = array(
            	'contacttypeid' => $data['contacttypeid'],
            	'firstname' => $data['firstname'],
            	'lastname' => $data['lastname'],
            	'middleinitial' => $data['middleinitial'],
            	'dear' => $data['dear'],
            	'addressline1' => $data['addressline1'],
            	'addressline2' => $data['addressline2'],
            	'city' => $data['city'],
            	'stateorprovince' => $data['stateorprovince'],
            	'postalcode' => $data['postalcode'],
            	'region' => $data['region'],
            	'country' => $data['country'],
            	'companyname' => $data['companyname'],
            	'industry' => $data['industry'],
            	'title' => $data['title'],
            	'workphone' => $data['workphone'],
            	'workextension' => $data['workextension'],
            	'homephone' => $data['homephone'],
            	'cellphone' => $data['cellphone'],
            	'faxnumber' => $data['faxnumber'],
            	'emailaddress' => $data['emailaddress'],
            	'birthdate' => $data['birthdate'],
                'lastmeetingdate' => $data['lastmeetingdate'],
            	'referredby' => $data['referredby'],
            	'notes' => $data['notes'],
            	'maritalstatusid' => $data['maritalstatusid'],
            	'spousesname' => $data['spousesname'],
            	'childrensnames' => $data['childrensnames'],
            	'hometown' => $data['hometown'],
            	'contactsinterests' => $data['contactsinterests']
            );

        } elseif ($data['contacttypeid'] == 2) {
            // Business Contact

            $queryarray = array(
                'contacttypeid' => $data['contacttypeid'],
                'companyname' => $data['companyname'],
                'industry' => $data['industry'],
                'addressline1' => $data['addressline1'],
                'addressline2' => $data['addressline2'],
                'city' => $data['city'],
                'stateorprovince' => $data['stateorprovince'],
                'postalcode' => $data['postalcode'],
                'region' => $data['region'],
                'country' => $data['country'],
                'workphone' => $data['workphone'],
                'faxnumber' => $data['faxnumber'],
                'website' => $data['website'],
                'emailaddress' => $data['emailaddress'],
                'lastmeetingdate' => $data['lastmeetingdate'],
                'referredby' => $data['referredby'],
                'notes' => $data['notes']
            );

        }

        // -ID number needs to be transferred or it will be set to 0 (zero) causing
        //  mysql/php to spit out a bunch of error messages
        $queryarray['contactid'] = $data['contactid'];

        if (!empty($queryarray)) {
            // Any error messages will be displayed by the function addeditform()
            if (!$dbc->insert('contacts',$queryarray)) {
                // Insert failed
                $valid->addError(get_lang("contactaddfailed") . $dbc->errorString());
            }
        } // END if (!empty($queryarray))

    }
    // END if ($tf)

    // Don't display or delete any errors here. This will be taken care of by the function addeditform() or viewcontact()

    return $tf;

}
// END function SaveNewContact()

function search() {

    global $dbc, $valid;

    $form = new HtmlForm();
    $table = new HtmlTable();

    // Needs to match the array on line 516
    $searchscopearray = array(
        'all' =>'All Data',
        'firstname' => 'First Name',
        'lastname' => 'Last Name',
        'companyname' => 'Company Name',
        'emailaddress' => 'Email Address'
    );

    // Field name mappings
    $fieldmappings = array(
        'firstname' => 'firstname',
        'lastname' => 'lastname',
        'companyname' => 'companyname',
        'emailaddress' => 'emailaddress'
    );

    $searchscope = $valid->get_value('searchscope');
    $searchterm = $valid->get_value('searchterm');

    $contactid = $valid->get_value_numeric('contactid', 0);

    // How many matches where found?
    $numresults = 0;

    if ($searchscope == 'all') {
        // Search all fields in the table

        // Get list of fields in the 'contacts' table
        $fieldlist = $dbc->listFields('contacts');

        if (!empty($fieldlist)) {
            // Got a list of field names for searching

            // Run each query and save results to temp database
            foreach ($fieldlist as $fldname => $defaultvalue) {
                // Create the query
                $query = $dbc->select('contacts', $fldname.' LIKE "%'.$searchterm.'%"');

                // Check for number of matches
                $numresults = $dbc->numRows($query);
                if ($numresults > 0) {
                    // Got a match so copy data to temp table
                    $data = $dbc->fetchAssoc($query);
                    $dbc->insert('tempsearchresults', $data);
                }
            }
        }
    } else {
        // Search a specific field

        $query = $dbc->select('contacts', $fieldmappings[$searchscope].' LIKE "%'.$searchterm.'%"');
        $numresults = $dbc->numRows($query);
        if ($numresults > 0) {
            $data = $dbc->fetchAssoc($query);
            $dbc->insert('tempsearchresults', $data);
        }
    }
    // END if ($searchscope == 'all')

    // Retreive the search results
    // The 'Group By' option removes duplicate results
    $query = $dbc->select('tempsearchresults', '', '', array('GROUP BY' => 'contactid', 'ORDER BY' => 'contactid ASC'));

    // Count number of unique/distinct results
    $numresults = $dbc->numRows($query);

    echo '<div class="search_results_main_div">';

    if ($numresults > 0) {
        // Found at least 1 match

        echo '<center>'.get_lang('searchterm'). ' \''.$searchterm.'\'<br/>'.get_lang('searchscope').': '.$searchscopearray[$searchscope].'</center><br>';

        // Header row
        echo '<div class="search_header_row_div">';
        echo '<span>'.get_lang('Name').'</span>';
        echo '<span>'.get_lang('address').'</span>';
        echo '</div>';

        // Display the search results
        echo '<div class="search_results_div">';
        while ($row = $dbc->fetchAssoc($query)) {

            if (($row['city'] != '') && ($row['stateorprovince'] != '')) {
                $address = $row['city'].', '.$row['stateorprovince'];
            } else {
                if (($row['city'] != '') && ($row['stateorprovince'] == '')) {
                    $address = $row['city'];
                } elseif (($row['city'] == '') && ($row['stateorprovince'] != '')) {
                    $address = $row['stateorprovince'];
                } else {
                    $address = '&nbsp;&nbsp;';
                }
            }

            $onclick = 'window.location=\''.kgCreateLink('', array('NO_TAG' => 'NO_TAG', 'ACTON' => 'viewcontact', 'contactid' => $row['contactid'])).'\'';
            echo '<div class="search_result_row_div" onclick="'.$onclick.'">';

            echo '<span>'.GetContactName($row['contactid']).'</span>';
            echo '<span>'.$address.'</span>';
            echo '</div>';
        }

        echo "\n</div><!-- END search_results_div -->\n";

        // Clear the search results table so it is ready for the next search
        $dbc->query('TRUNCATE TABLE `tempsearchresults`');

    } else {
        // No matches found
        echo '<center>'.get_lang('NoMatchesFound'). ' \''.$searchterm.'\'<br/>'.get_lang('searchscope').': '.$searchscopearray[$searchscope].'</center>';
    }
    // END if ($numresults > 0)

    echo "\n</div><!-- END search_results_main_div-->\n";

    echo '<div class="search_goback_repeat_buttons_div">';
    $form->add_hidden(array('ACTON' => 'viewcontact', 'contactid' => $contactid));
    $form->buttononlyform(kgGetScriptName(),'post','frmgoback',get_lang('goback'));
    $form->add_hidden(array('ACTON' => 'search', 'contactid' => $contactid, 'searchscope' => $searchscope, 'searchterm' => $searchterm));
    $form->buttononlyform(kgGetScriptName(),'post','frmrepeatsearch',get_lang('RepeatSearch'));
    echo '</div>';

}
// END function search()

function validate_data($dowhat) {
    /**
     * Does some simple validation and formatting of the data prior to
     * saving the data into the database.
     *
     * Added: 201?-??-??
     * Modified: 2017-08-16
     *
     * @param Required string $dowhat Must be one of 'addcontact', 'editcontact', or 'viewcontact'
     *
     * @return array(validated true||false, data)
    **/

    global $valid, $dbc;

    // Retrieve contact data.
    $data = getdata($dowhat);

    // Phone/Fax Number formatting
    if ($data['workphone'] != '') {
        list ($tf, $data['workphone']) = kgFormatPhoneNumber($data['workphone'],true);
        if (!$tf) {
            $valid->addError(get_lang('InvalidFormatworkphoneNumber'));
        }
    }
    if ($data['faxnumber'] != '') {
        list ($tf, $data['faxnumber']) = kgFormatPhoneNumber($data['faxnumber'],true);
        if (!$tf) {
            $valid->addError(get_lang('Invalidfaxnumber'));
        }
    }
    if (($data['contacttypeid'] == PERSONAL) && ($data['homephone'] != '')) {
        list ($tf, $data['homephone']) = kgFormatPhoneNumber($data['homephone'],true);
            if (!$tf) {
                $valid->addError(get_lang('InvalidhomephoneNumber'));
            }
    }
    if (($data['contacttypeid'] == PERSONAL) && ($data['cellphone'] != '')) {
        list ($tf, $data['cellphone']) = kgFormatPhoneNumber($data['cellphone'],true);
        if (!$tf) {
            $valid->addError(get_lang('InvalidcellphoneNumber'));
        }
    }
    // END Phone/Fax Number formatting

    // ZIP Code/Postal Code formatting
    if ($data['postalcode'] != '') {
        list ($tf, $data['postalcode']) = kgFormatZipCode($data['postalcode'],true);
        if (!$tf) {
            $valid->addError(get_lang('Invalidpostalcode'));
        }
    } elseif ($data['city'] != '') {
        // Retreive zipcode from database
        $data['postalcode'] = $dbc->fieldValue($dbc->select('uszipcodes', 'city = "'.strtoupper($data['city']).'"', 'zipcode'));
    }

    if ($data['city'] == '' && $data['postalcode'] != '') {
        // Retreive city name from database
        $data['city'] = ucwords($dbc->fieldValue($dbc->select('uszipcodes', 'zipcode = '.$data['postalcode'], 'city')));
    }

    if ($data['stateorprovince'] == '' && $data['postalcode'] != '') {
        // Retreive state name from database
        $data['stateorprovince'] = ucwords($dbc->fieldValue($dbc->select('uszipcodes', 'zipcode = '.$data['postalcode'], 'state')));
    }

    // Time and date fields
    // -A value of '--' is possible if the user does not select a date.
    // -Nothing is actually validated here, just making sure these fields
    //  have a value other than '' (blank)
    $nulldate = '0000-00-00';
    if (($data['contacttypeid'] == PERSONAL) && ($data['birthdate'] == '--')) {
        $data['birthdate'] = $nulldate;
    }
    if ($data['lastmeetingdate'] == '--') {
        $data['lastmeetingdate'] = $nulldate;
    }

    // The "http://" is required or the server will think the link is a local file
    if ($data['website'] != '') {
        if (substr($data['website'],0,7) != 'http://' && substr($data['website'],0,8) != 'https://') {
            $data['website'] = 'http://'.$data['website'];
        }
    }

    // Check for errors
    if ($valid->hasErrors()) {
        // Data failed validation
        return array(false, $data);
    } else {
        // Data passed validation
        return array(true, $data);
    }

}
// END function validate_data()
/////

function ViewContact() {
    /**
     * View contacts in the database
     *
     * Added: 2017-07-10
     * Modified: 2017-07-23
     *
     * @param None
     *
     * @return Nothing
    **/

    global $dbc, $valid, $KG_SECURITY;

    $table = new HtmlTable();
    $grouptable = new HtmlTable();
    $innertables = new HtmlTable();
    $form = new HtmlForm();

    // Hide all messages generated by $KG_SECURITY->hasPermission()
    $KG_SECURITY->hideMsgs();

    // Display errors if any
    $valid->displayErrors();

    // Make sure $offset and $contactid are valid numbers.
    // They will be set to zero if not.
    $offset = $valid->get_value_numeric('offset', 0);
    $contactid = $valid->get_value_numeric('contactid', 0);
    if ($contactid == 0) {
        $contactid = $valid->get_value_numeric('gotocontactid', 0);
    }

    // -Fill an array ($idnumbersarr) with the ID numbers so
    //  we can find our position in the table
    $query = $dbc->select('contacts', '', 'contactid');
    if ($dbc->numRows($query) > 0) {
        $idnumbersarr = array();
        while ($row = $dbc->fetchAssoc($query)) {
            array_push($idnumbersarr, $row['contactid']);
        }
        $disablenavbuttons = false;
    } else {
        // Only one contact in database so disable the navigation buttons
        $disablenavbuttons = true;
    }

    // Number of items in the array
    $numitems = count($idnumbersarr) - 1;

    if ($offset >= 0 && $contactid == 0) {
        // We know the offset, find the id number
        $contactid = $idnumbersarr[$offset];
    } elseif ($contactid > 0) {
        // We know the id, find the offset
        $offset = array_search($contactid, $idnumbersarr);
    } else {
        // Don't know either so set $contactid to first one in the array
        $contactid = $idnumbersarr[0];
    }

    // Get data for contact
    $contactdata = getdata('viewcontact', $contactid);

    // Set offset values for next/previous buttons
    $offsetnext = $offset + 1;
    if ($offsetnext > $numitems) {
        $offsetnext = 0;
    }
    $offsetprev = $offset - 1;
    if ($offsetprev < 0) {
        $offsetprev = $numitems;
    }

echo '<script type="text/javascript">
    function validateGoToID() {
        if (document.getElementById(\'gotocontactid\').value == \'\') {
            alert("'.get_lang('contactidrequired').'");
            return false;
        }

        return true;
    }

    function validateSearchTerm() {
        if (document.getElementById(\'searchterm\').value == \'\') {
            alert("'.get_lang('searchtermrequired').'");
            return false;
        }

        return true;
    }
</script>
';

    // Add
    if ($KG_SECURITY->hasPermission('add')) {
        echo '<div class="vc_add_button_div">';
        $form->add_hidden(array('ACTON' => 'addcontact'));
        $form->buttononlyform(kgGetScriptName(),'post','frmadditem',get_lang('addcontact'));
        echo "\n</div><!-- END vc_add_button_div -->\n";
    }

    // Contact ID Number and type
    echo '<div class="centered id_type_encompassing_div">';
    echo '<div class="contact_id_div">'.get_lang("contactid").': '.$contactdata['contactid'].'</div>';
    echo '<div class="contact_type_div">'.get_lang('contacttype').': '.$dbc->fieldValue($dbc->select('contacttypes', 'contacttypeid = '.$contactdata['contacttypeid'], 'contacttype')).'</div>';
    echo "\n</div><!-- END id_type_encompassing_div -->\n";

    // Edit
    if ($KG_SECURITY->hasPermission('edit')) {
        echo '<div class="vc_edit_button_div">';
        $form->add_hidden(array('ACTON' => 'editcontact', 'contactid' => $contactid));
        $form->buttononlyform(kgGetScriptName(),'post','frmedititem',get_lang('EditContact'));
        echo "\n</div><!-- END vc_edit_button_div -->\n";
    }

    // Display contact data
    if ($contactdata['contacttypeid'] == PERSONAL) {
        VcPersonalLayout($contactdata);
    } else {
        VcBusinessLayout($contactdata);
    }
    
    // Navigation buttons
    echo '<div class="vc_nav_options_div">';

    // Search form
    echo '<div class="vc_search_form_div">';
    $form->add_hidden(array('ACTON' => 'search','contactid' => $contactdata['contactid']));
    $form->onsubmit('return validateSearchTerm();');
    $form->start_form(kgGetScriptName(),'post','frmsearch');
    // Needs to match the array on line 862
    $form->add_select_match_key('searchscope',array('all' => 'All Data','firstname' => 'First Name','lastname' => 'Last Name','companyname' => 'Company Name','emailaddress' => 'Email Address'));
    $form->add_text('searchterm');
    $form->add_button_submit(get_lang('search'));
    $form->end_form();
    echo "\n</div><!-- END vc_search_form_div -->\n";

    echo '<div class="vc_nav_goto_id_div">';
    $form->add_hidden(array('ACTON' => 'viewcontact'));
    $form->onsubmit('return validateGoToID();');
    $form->simple_form_text('gotocontactid', '', 5, '', '', 'frmgotoid', get_lang('enterid'), get_lang('view'));
    echo "\n</div><!-- END vc_nav_goto_id_div -->\n";

    echo '<div class="vc_nav_buttons_div">';    
    // First
    if ($disablenavbuttons) {
        $form->disablefield();
    }
    $form->add_hidden(array('ACTON' => 'viewcontact', 'offset' => 0));
    $form->buttononlyform(kgGetScriptName(),'post','frmfirstitem',get_lang('FirstContact'));

    // Previous
    if ($disablenavbuttons) {
        $form->disablefield();
    }
    $form->add_hidden(array('ACTON' => 'viewcontact', 'offset' => $offsetprev));
    $form->buttononlyform(kgGetScriptName(),'post','frmprevitem',get_lang('PreviousContact'));

    // Next
    if ($disablenavbuttons) {
        $form->disablefield();
    }
    $form->add_hidden(array('ACTON' => 'viewcontact', 'offset' => $offsetnext));
    $form->buttononlyform(kgGetScriptName(),'post','frmnextitem',get_lang('NextContact'));

    // Last
    if ($disablenavbuttons) {
        $form->disablefield();
    }
    $form->add_hidden(array('ACTON' => 'viewcontact', 'offset' => $numitems));
    $form->buttononlyform(kgGetScriptName(),'post','frmlastitem',get_lang('LastContact'));
    echo "\n</div><!-- END vc_nav_buttons_div -->\n</div><!-- END vc_nav_options_div -->\n";
}
// END function ViewContact()
/////

if ($dbc->isConnectedDB() === true) {
    $ACTON = $valid->get_value('ACTON');

    // The BusinessLayout() and PersonalLayout() functions are located in this file
    require_once $RP.'modules/contacts/_contacts.php';

    if (($ACTON == 'addcontact') || ($ACTON == 'editcontact')) {
        // Add or edit a contact

        addeditform($ACTON);

    } elseif ($ACTON == 'deleteconfirmed') {
        // Deletion of contact info has been confirmed

        deleteconfirmed();

    } elseif ($ACTON == 'savenewcontact') {
        // Add new contact to database

        $rv = SaveNewContact();

        if ($rv) {
            ViewContact();
        } else {
            // Data validation failed
            addeditform('addcontact');
        }

    } elseif ($ACTON == 'savechangesexisting') {
        // Save changes to an existing contact

        savechangesexisting();

        ViewContact();

    } elseif ($ACTON == 'search') {
        // Display search results

        search();

    } else {
        // $ACTON not set

        ViewContact();

    }
    // END if ($ACTON == 'addcontact')
} // END if ($dbc->isConnectedDB() === true)
?>
